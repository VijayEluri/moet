package com.intuit.moet;import java.io.File;import java.io.FileInputStream;import java.util.Properties;import java.util.logging.Logger;/** * Settings for device such as device type, device id, resolution, operating system etc. * @author eong * */public class Settings {	private static Properties deviceProperties = new Properties();	public static final String MOET_PROPERTIES_FILE = "moet.properties";	public static final String PROPERTY_FILENAME = "propertyfile";	public static final String PROPERTY_DEVICE = "device";	public static final String PROPERTY_DEVICEID = "deviceid";	public static final String PROPERTY_RESOLUTION = "resolution";	public static final String PROPERTY_OPERATINGSYSTEM = "os";	public static final String PROPERTY_OUTPUTDIR = "outputdir";	public static final String PROPERTY_ANDROIDEXEC = "androidexec";	public static final String PROPERTY_IPHONEEXEC = "iphoneexec";	public static final String PROPERTY_LOG = "log";	public static final int SLEEP_INTERVAL= 3000;	public static final String IMAGETOOL_DIR = System.getenv("IMAGETOOL");		public String device = null;	public String deviceId;	public String resolution = "320x480";	public String os = "2.2";	public int resX;	public int resY;	public String androidExec;	public String iphoneExec;		// app specific setting	public String outputDir = null;	public String actualDir = null;	public String expectedDir = null;	public String log = "off";		public String appname = null;	private static final Logger LOG = Logger.getLogger(Settings.class.getName());	public Settings() {}		/**	 *  Read in a properties file or assume it is moet.properties	 */	public void init()	{		// first check if each individual property is specified		device = System.getProperty(PROPERTY_DEVICE);		try 		{			// if system property is missing, look for properties file			if (device == null)			{				String devicePropertyFile = System.getProperty(PROPERTY_FILENAME);				if (devicePropertyFile == null)				{							// last resort - check if default file exists					File propFile = new File("resources" + File.separator + Settings.MOET_PROPERTIES_FILE);					if (propFile.exists())						devicePropertyFile = Settings.MOET_PROPERTIES_FILE;						}				if (devicePropertyFile != null)				{					FileInputStream in = new FileInputStream("resources" + File.separator + devicePropertyFile);					deviceProperties.load(in);					in.close();					device = deviceProperties.getProperty(PROPERTY_DEVICE);					deviceId = deviceProperties.getProperty(PROPERTY_DEVICEID);					resolution = deviceProperties.getProperty(PROPERTY_RESOLUTION);					os = deviceProperties.getProperty(PROPERTY_OPERATINGSYSTEM);					log = deviceProperties.getProperty(PROPERTY_LOG);					androidExec = deviceProperties.getProperty(PROPERTY_ANDROIDEXEC);					iphoneExec = deviceProperties.getProperty(PROPERTY_IPHONEEXEC);				}			}			else			{				deviceId = System.getProperty(PROPERTY_DEVICEID);				resolution = System.getProperty(PROPERTY_RESOLUTION);				os = System.getProperty(PROPERTY_OPERATINGSYSTEM);				log = System.getProperty(PROPERTY_LOG);				androidExec = deviceProperties.getProperty(PROPERTY_ANDROIDEXEC);				iphoneExec = deviceProperties.getProperty(PROPERTY_IPHONEEXEC);			}			outputDir = System.getProperty("user.dir");			if (resolution != null)			{				String[] res = resolution.split("x");				if (res.length >= 2) 				{					resX = Integer.parseInt(res[0]);					resY = Integer.parseInt(res[1]);				}			}			StringBuffer testdir = new StringBuffer("");			StringBuffer archives = new StringBuffer("");						if (outputDir != null)			{				testdir.append(outputDir).append(File.separatorChar);				archives.append(outputDir).append(File.separatorChar);			}			testdir.append("test");			testdir.append(File.separatorChar);			testdir.append("htmlreports");			archives.append("resources");			if (this.device != null)			{				testdir.append(File.separatorChar);				archives.append(File.separator);				//testdir.append(this.device);				archives.append(this.device);				/*if (this.deviceId != null)				{					testdir.append('-');					testdir.append(this.deviceId);				}*/						if (this.resolution != null)				{					archives.append(File.separator);						archives.append(this.resolution);					}				testdir.append(File.separatorChar);					archives.append(File.separator);			}				this.actualDir = testdir.toString();			this.expectedDir = archives.toString();			LOG.info("Results dir is " + actualDir);			LOG.info("Golden  dir is " + expectedDir);			// create test output directory if not exist			File expectedDirFile = new File(this.expectedDir);			expectedDirFile.mkdirs();			expectedDirFile = null;			// create archives directory if not exist			File actualDirFile = new File(this.actualDir);			actualDirFile.mkdirs();			actualDirFile = null;		}		catch (Exception e)		{			e.printStackTrace();		}	}		public void setApplicationName(String[] appNames)	{		if (appNames.length <= 1)		{			return;		}				if (this.device.contains("android"))		{			this.appname = appNames[0];			//device.setAppName(this.appname_android);		}		else if (this.device.contains("iphone"))		{			this.appname = appNames[1];			//device.setAppName(this.appname_iphone);		}	}		public String toString()	{		return this.device + " " + this.deviceId + " " + this.resolution + " " + this.os + " " + this.outputDir;	}}